### DSSD configuration file ###

# Class
taskclass = diverse
# Command
command = dssd
# TakeItEasy(tm) -- ( 0 | 1 ) If enabled, process runs with low priority.
takeItEasy = 0

## Basics
# Dataset
dsName = creditg
# Maximum time (in minutes; 0 for no maximum)
maxTime = 0
# Save intermediate results after each level (bfs,beam only)
outputIntermediate = 1
# Save subsets of final resultset
outputSubsets = 1
# Save models belonging to subgroups of final resultset
outputModels = 0
# Log beam selection that is made on each level
beamLogSelection = 0
# How to deal with induced subgroup models; caching costs more memory but is faster [cache | rebuild]
sgModels = cache

## Controlling the 3 phases
# Phase 1: Number of results to keep during initial search phase
topK = 10000
# Phase 2: Post-processing methods to apply (any of [dominance, equalcover, qualitysort], separated by -)
postProcess = dominance-qualitysort
# Phase 3: Subgroup set selection (0 to disable, any other integer specifies number of desired results)
postSelect = 100
# Selection strategy to be used for post-selection (specify only if different from `beamStrategy')
#postSelectBeam = cover

### Search parameters
# [beam | dfs | iter-0.x-[dfs|beam] (x=0 -> sequential covering, weighted covering otherwise)]
searchType = beam
# Maximum depth for the search (ie the maximum number of conditions in a subgroup description)
maxDepth = 5
# Minimum subgroup size
minCoverage = 10
# Number of split points for on-the-fly discretisation; numeric values splitted into floatNumSplits+1 intervals
floatNumSplits = 5

## Beam search settings
# Beam selection strategy [quality | description | cover | compression]
# `Quality' is the standard top-k search, the other three correspond to the DSSD strategies
beamStrategy = quality
# Fixed beam width, or maximum beam width when variable beam width is used
beamWidth = 100
# Variable beam width (disabled when set to 'false', which is the default; effect depends on beamStrategy)
beamVarWidth = false
# Multiplicative weight covering multiplier for cover-based selection strategy
coverBeamMultiplier = 0.9
# Cover strategy for cover-based selection strategy [sequential | multiplicative | additive]
# (For the DSSD experiments, this was always set to multiplicative)
coverBeamStrategy = multiplicative

### Quality
## Quality measure to use [WRAcc | WKL | KL | meantest | ChiSquared]
measure = WRAcc

## WRAcc 
# WRAcc mode [single | 1vsAll(default) | 1vsAllWeighted | 1vs1]
WRAccMode = single
